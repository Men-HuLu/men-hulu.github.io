(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{217:function(s,n,a){"use strict";a.r(n);var e=a(0),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"委托"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#委托"}},[s._v("#")]),s._v(" 委托")]),s._v(" "),a("h4",{attrs:{id:"委托delegate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#委托delegate"}},[s._v("#")]),s._v(" 委托delegate")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public delegate void mydelegate();//定义了一个mydelegate的类型 ,用来保存方法\nmydelegate md=new mydelegate（方法名）  存一个方法\nmd（） 调一下委托\n1.是一种数据类型，一般在命名空间中定义\n2.定义委托时，需要指定返回值类型，委托名和参数名\n3.委托是引用类型，就像类一样，所以委托声明后，如果不赋值变量为null，所以在使用委托变量前最好使用非空校验！=null   ?.\n4.委托类型的变量只能赋值一个委托类型的对象\nmydelegate md=new mydelegate(M1)\nmydelegate md=M1\n5.md.invoke()调用\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"泛型委托："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#泛型委托："}},[s._v("#")]),s._v(" 泛型委托：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("无返回值\naction\naction<T>\n有返回值\nfunc<T>    只有泛型版本的\n//保存无参数无返回值得方法\naction action=new action()\naction()\n\npublic delegate void action <T1,T2,T3>()\naction<string> a1=m=>{console.write()}\naction<string,,int> a1=m=>{console.write()}\n\npublic delegate Tresult func<T1,T2,T3,Tresult>()\nfunc<int,int,int> fun=(m,n)=>{return m+n}\nint f=fun(m,n)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h4",{attrs:{id:"多播委托"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多播委托"}},[s._v("#")]),s._v(" 多播委托")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('一个委托可以储存多个方法\n第一个要=赋值，后面的+=赋值\naction<string> action=m1\naction+=m2\naction+=m3\naction+=m4\naction-=m3\naction("aaaa")\ndelegate my=new delegate(t1);\nmd=delegate.combine(md,new mydelegate(T2))\nmd()\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h4",{attrs:{id:"匿名方法-lambda表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匿名方法-lambda表达式"}},[s._v("#")]),s._v(" 匿名方法,lambda表达式")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('匿名方法\nmydelegate md=delegate（）{console.write()}  \n\nlambda:不用传数据类型\nmydelegate md=()=>{console.write()}\nmydelegate md=m=>{console.write(m)}\nmydelegate md=(m,n)=>{console.write("m"+"n")}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[s._v("#")]),s._v(" 事件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("事件基于委托\n只能-=，+=\npublic event action test；\n声明委托和事件特别像，就是加一个event\n\n因为委托来实现外部可以随便调用，不能将委托变成pirvate，也就无法调用\n委托可以=赋值一旦=null，就全部取消掉了\n\n事件编译就是私有的委托，但加了add和remove两个共有的方法\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"反射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射"}},[s._v("#")]),s._v(" 反射")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("动态加载程序集中的元数据，获取其类型，获取其属性，方法，来操作,(智能提示)\ntype mytype=typeof(my)\nfieldinfo[] fields=mytype.getfields();获取字段\ngetmenber()获取成员\ngetevent()获取事件\ngetmethod()获取方法…………\n拿到type有很多操作，可以获取很多\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('动态加载程序集\nassembly ass=assembly.loadfile(@"路径")；\n获取说有程序集中的类型\ntype[] types=asm.gettypes()//获取所有类型\n.getexportedtypes()//获取所有public类型\n\ntype typeperson=asm.gettypes(types[0])//获取第一个类型下所有类型\nmethodinfo method=typeperson.getmethod("方法名")获取方法\nmethod.invoke(对象，参数)\n\n无参\nactivator.createinstance（typeperson）//创建实例\n有参\nconstructorinfo ci= typeperson.getconstructor(new type[]{typeof(string),typeof(string)}})\nci.invoke(new object[]{"zzzz","aaa"});\n\n获取属性值\npropertyinfo pinfo=typeperson.getproperty("name");\nstring a=pinfo.getvalue(object,null)\n\nb.isassignablefrom(a) 类型检验  a能否赋值给b 父子类关系\na.issubclassf(b) 同上  与接口无关\n.isinstanceoftype()  实例检验  父子类关系\n\n.isabstract（） 判断是否抽象类，接口，静态类（不能实例化的）\n\n反射获取私有方法\nmethodinfo method=typeperson.getmethod("方法名"，bindingflags.nopublic|bindingflags.instance)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("h2",{attrs:{id:"枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#枚举"}},[s._v("#")]),s._v(" 枚举")]),s._v(" "),a("p",[s._v("==没加[flags]显示数字==")]),s._v(" "),a("p",[s._v("==加[flags]显示枚举类型==")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('enum枚举\n标志枚举[flags]不互斥\n[Flags]\npublic enum Permission\n{\n    create = 1,\n    read = 2,\n    update = 4,\n    delete = 8,\n}\nstatic void Main(string[] args)\n{\n    Permission permission = Permission.create | Permission.read | Permission.update | Permission.delete;\n    Console.WriteLine("1、枚举创建，并赋值……");\n    Console.WriteLine(permission.ToString());\n    Console.WriteLine((int)permission);\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"扩展方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展方法"}},[s._v("#")]),s._v(" 扩展方法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1.静态类、静态方法以及this关键字。\n2.无法访问类的私有成员\n3.静态类和类要同一个空间，否则要引用\npublic class person\n{\n    public void say()\n    {}\n}\npublic static class person\n{\n    public static  void say(this person p)\n    {\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);