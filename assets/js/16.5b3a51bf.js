(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{197:function(t,a,v){"use strict";v.r(a);var _=v(0),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"架构设计和程序设计的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#架构设计和程序设计的区别"}},[t._v("#")]),t._v(" 架构设计和程序设计的区别")]),t._v(" "),v("blockquote",[v("p",[t._v("架构设计的关键思维是判断和取舍，程序设计的关键思维是逻辑和实现。")])]),t._v(" "),v("h2",{attrs:{id:"架构是什么？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#架构是什么？"}},[t._v("#")]),t._v(" 架构是什么？")]),t._v(" "),v("p",[t._v("这要从树立清楚几个关系")]),t._v(" "),v("ol",[v("li",[t._v("系统与子系统")]),t._v(" "),v("li",[t._v("模块与组件")]),t._v(" "),v("li",[t._v("架构与框架")])]),t._v(" "),v("h3",{attrs:{id:"系统与子系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#系统与子系统"}},[t._v("#")]),t._v(" 系统与子系统")]),t._v(" "),v("h4",{attrs:{id:"系统的定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#系统的定义"}},[t._v("#")]),t._v(" 系统的定义")]),t._v(" "),v("blockquote",[v("p",[t._v("系统泛指由一群有关联的个体组成，根据某种规则运作，能完成个别元件不能单独完成的工作的群体。它的意思是“总体”“整体”或“联盟”。")])]),t._v(" "),v("ol",[v("li",[t._v("关联:系统是由一群有关联的个体组成的，没有关联的个体堆在一起不能成为一个系统。例如，把一个发动机和一台PC放在一起不能称之为一个系统，把发动机、底盘、轮胎、 车架组合起来才能成为一台汽车。")]),t._v(" "),v("li",[t._v("规则:系统内的个体需要按照指定的规则运作，而不是单个个体各自为政。规则规定了系统内个体分工和协作的方式。例如，汽车发动机负责产生动力，然后通过变速器和传动 轴，将动力输出到车轮上，从而驱动汽车前进。")]),t._v(" "),v("li",[t._v("能力:系统能力与个体能力有本质的差别，系统能力不是个体能力之和，而是产生了新的能力。例如，汽车能够载重前进，而发动机、变速器、传动轴、车轮本身都不具备这样 的能力。")])]),t._v(" "),v("h4",{attrs:{id:"子系统的定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#子系统的定义"}},[t._v("#")]),t._v(" 子系统的定义")]),t._v(" "),v("blockquote",[v("p",[t._v("子系统也是由一群有关联的个体所组成的系统，多半会是更大系统中的一部分。")])]),t._v(" "),v("h4",{attrs:{id:"系统和子系统的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#系统和子系统的理解"}},[t._v("#")]),t._v(" 系统和子系统的理解")]),t._v(" "),v("p",[t._v("子系统的定义和系统定义是一样的，只是观察的角度有差异")]),t._v(" "),v("ol",[v("li",[t._v("微信本身是一个系统，包含聊天、登录、支付、朋友圈等子系统。")]),t._v(" "),v("li",[t._v("朋友圈这个系统又包括动态、评论、点赞等子系统。")]),t._v(" "),v("li",[t._v("评论这个系统可能又包括防刷子系统、审核子系统、发布子系统、存储子系统。")]),t._v(" "),v("li",[t._v("评论审核子系统不再包含业务意义上的子系统，而是包括各个模块或者组件，这些模块或者组件本身也是另外一个维度上的系统。例如，MySQL、Redis等是存储系统，但不是 业务子系统。")])]),t._v(" "),v("h3",{attrs:{id:"模块与组件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#模块与组件"}},[t._v("#")]),t._v(" 模块与组件")]),t._v(" "),v("h4",{attrs:{id:"定义的区分从观察角度来看"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定义的区分从观察角度来看"}},[t._v("#")]),t._v(" 定义的区分从观察角度来看")]),t._v(" "),v("p",[t._v("从逻辑的角度来拆分系统后，得到的单元就是“模块”;从物理的角度来拆分系统后，得到的单元就是“组件”。")]),t._v(" "),v("p",[t._v("举例：假设我们要做一个学生信息管理系统，这个系统从逻辑的角度来拆分，可以分为“登录注册模块”“个人信息模块”“个人成绩模块”;从物理的角度 来拆分，可以拆分为Nginx、Web服务器、MySQL。")]),t._v(" "),v("h3",{attrs:{id:"架构与框架"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#架构与框架"}},[t._v("#")]),t._v(" 架构与框架")]),t._v(" "),v("h4",{attrs:{id:"软件框架"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#软件框架"}},[t._v("#")]),t._v(" 软件框架")]),t._v(" "),v("blockquote",[v("p",[t._v("1.软件框架(Software framework)通常指的是为了实现某个业界标准或完成特定基本任务的软件组件规范，也指为了实现某个软件组件规范时，提供规范所要求之基 础功能的软件产品。\n2.软件架构指软件系统的“基础结构”，创造这些基础结构的准则，")])]),t._v(" "),v("h4",{attrs:{id:"框架的定义："}},[v("a",{staticClass:"header-anchor",attrs:{href:"#框架的定义："}},[t._v("#")]),t._v(" 框架的定义：")]),t._v(" "),v("ol",[v("li",[t._v("框架是组件规范:例如，MVC就是一种最常见的开发规范，类似的还有MVP、MVVM、J2EE等框架。")]),t._v(" "),v("li",[t._v("框架提供基础功能的产品:例如，Spring MVC是MVC的开发框架，除了满足MVC的规范，Spring提供了很多基础功能来帮助我们实现功能，包括注解 (@Controller等)、Spring Security、Spring JPA等很多基础功能。")])]),t._v(" "),v("h6",{attrs:{id:"说到底框架是和架构比较相似的概念，且两者有较强的关联关系。区分的关键就是“基础结构”这个概念并没有明确说是从什么角度来分解的。"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#说到底框架是和架构比较相似的概念，且两者有较强的关联关系。区分的关键就是“基础结构”这个概念并没有明确说是从什么角度来分解的。"}},[t._v("#")]),t._v(" 说到底框架是和架构比较相似的概念，且两者有较强的关联关系。区分的关键就是“基础结构”这个概念并没有明确说是从什么角度来分解的。")]),t._v(" "),v("p",[t._v("举例：")]),t._v(" "),v("h5",{attrs:{id:"逻辑的角度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#逻辑的角度"}},[t._v("#")]),t._v(" 逻辑的角度")]),t._v(" "),v("ol",[v("li",[t._v("登录注册模块，")]),t._v(" "),v("li",[t._v("个人信息模块")]),t._v(" "),v("li",[t._v("个人成绩模块")])]),t._v(" "),v("h5",{attrs:{id:"物理的角度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#物理的角度"}},[t._v("#")]),t._v(" 物理的角度")]),t._v(" "),v("ol",[v("li",[t._v("Nginx")]),t._v(" "),v("li",[t._v("Web服务器")]),t._v(" "),v("li",[t._v("MySQL")])]),t._v(" "),v("h5",{attrs:{id:"开发规范的角度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#开发规范的角度"}},[t._v("#")]),t._v(" 开发规范的角度")]),t._v(" "),v("p",[t._v("可以采用标准的MVC框架来开发（controller，view，model）")]),t._v(" "),v("h4",{attrs:{id:"总而言是，所以说框架是从开发者从代码开发的角度去看待的架构。"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总而言是，所以说框架是从开发者从代码开发的角度去看待的架构。"}},[t._v("#")]),t._v(" 总而言是，所以说框架是从开发者从代码开发的角度去看待的架构。")])])}),[],!1,null,null,null);a.default=r.exports}}]);